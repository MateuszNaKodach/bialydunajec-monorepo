# Java Gradle CircleCI 2.0 configuration file
#
# Check https://circleci.com/docs/2.0/language-java/ for more details
#
version: 2
jobs:
  build:
    docker:
      - image: circleci/openjdk:8-jdk

    working_directory: ~/repo

    environment:
      # Customize the JVM maximum heap limit
      JVM_OPTS: -Xmx3200m
      TERM: dumb

    steps:
      - checkout

      - run:
          name: Show current branch
          command: echo ${CIRCLE_BRANCH}

      # Download and cache dependencies
      - restore_cache:
          keys:
            - v1-dependencies-{{ checksum "build.gradle" }}
            # fallback to using the latest cache if no exact match is found
            - v1-dependencies-

      - run:
          name: Change chmod permission for Gradle Wrapper
          command: chmod +x ./gradlew

      - run: ./gradlew dependencies --stacktrace

      - save_cache:
          paths:
            - ./gradlew
          key: v1-dependencies-{{ checksum "build.gradle" }}

      # run tests!
      - run: ./gradlew test

      # build application .jar artifact
      - run: ./gradlew build -x test

      - store_artifacts:
          path: build/libs/*

      - run:
          name: change artifact name
          command: cp build/libs/bialydunajec-backend* build/libs/bialydunajec-backend.jar
      # Cache the build folder for the deploy job
      - save_cache:
          key: v1-build-{{ .Environment.CIRCLE_BRANCH }}-{{ .Environment.CIRCLE_SHA1 }}
          paths:
            - build

  deploy:
    docker:
      - image: circleci/openjdk:8-jdk

    working_directory: ~/repo

    environment:
      # Customize the JVM maximum heap limit
      JVM_OPTS: -Xmx3200m
      TERM: dumb

    steps:
      - add_ssh_keys
      - run: ssh-keyscan 31.186.82.95 >> ~/.ssh/known_hosts
      - restore_cache:
          key: v1-build-{{ .Environment.CIRCLE_BRANCH }}-{{ .Environment.CIRCLE_SHA1 }}
      - run:
          name: Show current branch
          command: echo ${CIRCLE_BRANCH}
      - run:
          name: Deploy bialydunajec-backend
          command: |
            if [ "${CIRCLE_BRANCH}" == "master" ]; then
                ssh Bialydunajec@31.186.82.95 pkill -f backend/env_prod
                ssh Bialydunajec@31.186.82.95 rm /home/Bialydunajec/webapp/backend/env_prod/bialydunajec-backend.jar
                scp build/libs/bialydunajec-backend.jar Bialydunajec@31.186.82.95:/home/Bialydunajec/webapp/backend/env_prod
                ssh Bialydunajec@31.186.82.95 nohup java -jar -D-Xms512m -Xmx512m -Dspring.profiles.active=env_prod -Djasypt.encryptor.password=${JASYPT_ENCRYPTOR_PASSWORD} /home/Bialydunajec/webapp/backend/env_prod/bialydunajec-backend.jar &> nohup_prod.out&
            elif [ "${CIRCLE_BRANCH}" == "staging" ]; then
                ssh Bialydunajec@31.186.82.95 pkill -f backend/env_staging
                ssh Bialydunajec@31.186.82.95 rm /home/Bialydunajec/webapp/backend/env_dev/bialydunajec-backend.jar
                scp build/libs/bialydunajec-backend.jar Bialydunajec@31.186.82.95:/home/Bialydunajec/webapp/backend/env_staging
                ssh Bialydunajec@31.186.82.95 nohup java -jar -D-Xms512m -Xmx512m -Dspring.profiles.active=env_staging /home/Bialydunajec/webapp/backend/env_staging/bialydunajec-backend.jar &> nohup_staging.out&
            elif [ "${CIRCLE_BRANCH}" == "develop" ]; then
                ssh Bialydunajec@31.186.82.95 pkill -f backend/env_dev
                ssh Bialydunajec@31.186.82.95 rm /home/Bialydunajec/webapp/backend/env_dev/bialydunajec-backend.jar
                scp build/libs/bialydunajec-backend.jar Bialydunajec@31.186.82.95:/home/Bialydunajec/webapp/backend/env_dev
                ssh Bialydunajec@31.186.82.95 nohup java -jar -D-Xms512m -Xmx512m -Dspring.profiles.active=env_dev /home/Bialydunajec/webapp/backend/env_dev/bialydunajec-backend.jar &> nohup_dev.out&
            fi

workflows:
  version: 2
  build_and_deploy:
    jobs:
      - build
      - deploy:
          requires:
            - build
          filters:
            branches:
              only:
                - develop
                - staging
                - master
