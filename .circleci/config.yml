# Java Gradle CircleCI 2.0 configuration file
#
# Check https://circleci.com/docs/2.0/language-java/ for more details
#
version: 2
jobs:
  build:
    docker:
    # specify the version you desire here
    - image: circleci/openjdk:8-jdk

    # Specify service dependencies here if necessary
    # CircleCI maintains a library of pre-built images
    # documented at https://circleci.com/docs/2.0/circleci-images/
    # - image: circleci/postgres:9.4

    working_directory: ~/repo

    environment:
      # Customize the JVM maximum heap limit
      JVM_OPTS: -Xmx3200m
      TERM: dumb

    steps:
    - checkout

    # Download and cache dependencies
    - restore_cache:
        keys:
        - v1-dependencies-{{ checksum "build.gradle" }}
        # fallback to using the latest cache if no exact match is found
        - v1-dependencies-

    - run:
        name: chmod permissions
        command: chmod +x ./gradlew

    - run: ./gradlew dependencies --stacktrace

    - save_cache:
        paths:
        - ./gradlew
        key: v1-dependencies-{{ checksum "build.gradle" }}

    # run tests!
    - run: ./gradlew test

    # build application .jar artifact
    - run: ./gradlew build -x test

    - store_artifacts:
        path: build/libs/bialydunajec-backend-0.0.1.2-SNAPSHOT.jar

    - add_ssh_keys
   #     fingerprints:
   #       - "e9:4c:39:25:4e:90:72:75:f0:50:58:1c:69:5d:ae:08"
   #       - "xsorI0pBAf6Jb3C+xCJzkIMzFFmIfPIuu9Y+x2YYi4M"

    - run: ssh-keyscan 31.186.82.95 >> ~/.ssh/known_hosts

    - run:
        name: change artifact name
        command: cp build/libs/bialydunajec-backend* build/libs/bialydunajec-backend.jar

    - run:
        name: deploy on dev environment
        command: scp  build/libs/bialydunajec-backend.jar Bialydunajec@31.186.82.95:/home/Bialydunajec/webapp/backend/env_dev

    - run:
        name: run on dev environment
        command: ssh Bialydunajec@31.186.82.95 nohup java -jar -Dspring.profiles.active=env_dev /home/Bialydunajec/webapp/backend/env_dev/bialydunajec-backend.jar &> nohup_dev.out&
